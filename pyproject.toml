[tool.poetry]
name = "tanzo-lang-core"
version = "0.1.0"
description = "TanzoLang schema specification and utilities"
authors = ["Tomodaichi Tanzo Team"]
readme = "README.md"
license = "Apache-2.0"
repository = "https://github.com/onalius/tanzo-lang-core"
packages = [
    { include = "clients/python/tanzo_schema" },
    { include = "cli" },
]

[tool.poetry.dependencies]
python = "^3.11"
pydantic = "^2.0.0"
jsonschema = "^4.17.3"
pyyaml = "^6.0"
click = "^8.1.3"

[tool.poetry.dev-dependencies]
pytest = "^7.3.1"
pytest-cov = "^4.1.0"
black = "^23.3.0"
mypy = "^1.3.0"
isort = "^5.12.0"
ruff = "^0.0.272"
mkdocs-material = "^9.1.14"

[tool.poetry.scripts]
tanzo-cli = "cli.tanzo-cli:cli"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.11"
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_ignores = true

[tool.ruff]
line-length = 100
select = ["E", "F", "B", "I"]
target-version = "py311"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
addopts = "--cov=clients/python --cov=cli --cov-report=term-missing --cov-fail-under=90"

[tool.semantic_release]
version_variable = ["clients/python/tanzo_schema/__init__.py:__version__", "pyproject.toml:version"]
branch = "main"
upload_to_pypi = true
upload_to_release = true
build_command = "pip install poetry && poetry build"
