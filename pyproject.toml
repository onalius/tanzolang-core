[tool.poetry]
name = "tanzo-lang-core"
version = "0.1.0"
description = "TanzoLang specification and tooling for the Tomodaichi Tanzo ecosystem"
authors = ["Onalius Team <info@onalius.com>"]
readme = "README.md"
license = "Apache-2.0"
repository = "https://github.com/onalius/tanzo-lang-core"
packages = [
    {include = "clients/python/tanzo_schema"}
]

[tool.poetry.dependencies]
python = "^3.11"
pydantic = "^2.0.0"
jsonschema = "^4.17.3"
pyyaml = "^6.0"
numpy = "^1.24.0"
click = "^8.1.3"
mkdocs-material = "^9.1.15"

[tool.poetry.group.dev.dependencies]
pytest = "^7.3.1"
pytest-cov = "^4.1.0"
black = "^23.3.0"
isort = "^5.12.0"
mypy = "^1.3.0"
ruff = "^0.0.270"
pre-commit = "^3.3.2"
python-semantic-release = "^7.34.3"

[tool.poetry.scripts]
tanzo-cli = "cli.tanzo-cli:cli"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ["py311"]

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.ruff]
line-length = 88
target-version = "py311"
select = [
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "B",  # flake8-bugbear
    "I",  # isort
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
filterwarnings = ["ignore::DeprecationWarning"]
addopts = "--cov=clients/python/tanzo_schema --cov=cli --cov-report=term-missing"

[tool.semantic_release]
version_variable = [
    "clients/python/tanzo_schema/__init__.py:__version__",
    "pyproject.toml:version"
]
branch = "main"
upload_to_pypi = true
upload_to_release = true
build_command = "pip install poetry && poetry build"
